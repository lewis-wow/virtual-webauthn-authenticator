#!/usr/bin/env -S npx tsx

import { readdir, writeFile } from 'fs/promises';
import path from 'path';

const targetDir = process.argv[2];
if (!targetDir) {
  console.error('❌ Please provide a target directory.');
  process.exit(1);
}

const fullPath = path.resolve(process.cwd(), targetDir);
const dirName = path.basename(fullPath);
const output_file = path.join(fullPath, 'index.ts');

console.log(`🌀 Generating barrel file for "${dirName}"...`);

const files = await readdir(fullPath);
const exports = files
  .filter(
    (file) =>
      file !== 'index.ts' && (file.endsWith('.ts') || file.endsWith('.tsx')),
  )
  .map((file) => {
    const nameWithoutExt = file.replace(/\.(ts|tsx)$/, '');
    // Crucially, export with the .js extension for NodeNext compatibility
    return `export * from './${nameWithoutExt}.js';`;
  });

const header = `/**\n * @file Automatically generated by a custom script.\n */\n\n`;
await writeFile(output_file, header + exports.join('\n') + '\n');

console.log(`✅ Barrel file generated at "${targetDir}/index.ts"`);
