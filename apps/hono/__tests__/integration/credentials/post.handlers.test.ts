import { env } from '@/env';
import type { Root } from '@/routes';
import { prisma, type User } from '@repo/prisma';
import { PublicKeyCredentialSchema } from '@repo/validation';
import { hc } from 'hono/client';
import { sign } from 'hono/jwt';
import { randomBytes } from 'node:crypto';
import { describe, test, expect, beforeAll } from 'vitest';

import {
  CHALLENGE_BASE64URL,
  RP_ID,
  USER_EMAIL,
  USER_ID,
  USER_NAME,
} from '../../helpers/consts';

const testClient = hc<Root>(`http://localhost:${env.PORT}`);

describe('Credentials POST handler', () => {
  let user: User;

  beforeAll(async () => {
    user = await prisma.user.upsert({
      where: {
        id: USER_ID,
      },
      update: {},
      create: {
        id: USER_ID,
        email: USER_EMAIL,
        name: USER_NAME,
      },
    });
  });

  test('test', async () => {
    const jwtPayload = {
      sub: USER_ID,
      exp: Math.floor(Date.now() / 1000) + 60 * 5, // Token expires in 5 minutes
    };
    const token = await sign(jwtPayload, env.JWT_SECRET);

    const response = await testClient.credentials.$post({
      json: {
        challenge: CHALLENGE_BASE64URL,
        rp: {
          id: RP_ID,
          name: RP_ID,
        },
        pubKeyCredParams: [{ alg: -7, type: 'public-key' }],
      },
      header: {
        Authorization: `Bearer ${token}`,
      },
    });

    const json = await response.json();

    console.log(json);

    expect(response.ok).toBe(true);

    const decoded = PublicKeyCredentialSchema.decode(json);

    expect(decoded).toMatchInlineSnapshot(`
      {
        "clientExtensionResults": {},
        "id": "Qvx7iugxTQCK3GES6ZFrmQ",
        "rawId": {
          "data": [
            66,
            252,
            123,
            138,
            232,
            49,
            77,
            0,
            138,
            220,
            97,
            18,
            233,
            145,
            107,
            153,
          ],
          "type": "Buffer",
        },
        "response": {
          "attestationObject": {
            "data": [
              163,
              99,
              102,
              109,
              116,
              100,
              110,
              111,
              110,
              101,
              103,
              97,
              116,
              116,
              83,
              116,
              109,
              116,
              160,
              104,
              97,
              117,
              116,
              104,
              68,
              97,
              116,
              97,
              88,
              148,
              163,
              121,
              166,
              246,
              238,
              175,
              185,
              165,
              94,
              55,
              140,
              17,
              128,
              52,
              226,
              117,
              30,
              104,
              47,
              171,
              159,
              45,
              48,
              171,
              19,
              210,
              18,
              85,
              134,
              206,
              25,
              71,
              69,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              16,
              66,
              252,
              123,
              138,
              232,
              49,
              77,
              0,
              138,
              220,
              97,
              18,
              233,
              145,
              107,
              153,
              165,
              3,
              38,
              1,
              2,
              32,
              1,
              33,
              88,
              32,
              187,
              135,
              60,
              97,
              121,
              187,
              246,
              3,
              225,
              168,
              184,
              184,
              94,
              193,
              101,
              17,
              248,
              223,
              18,
              95,
              119,
              180,
              248,
              85,
              68,
              209,
              26,
              50,
              126,
              159,
              141,
              186,
              34,
              88,
              32,
              159,
              178,
              139,
              6,
              171,
              251,
              88,
              214,
              249,
              226,
              166,
              20,
              5,
              30,
              141,
              211,
              255,
              188,
              193,
              192,
              104,
              150,
              71,
              154,
              230,
              138,
              215,
              206,
              243,
              163,
              33,
              61,
            ],
            "type": "Buffer",
          },
          "clientDataJSON": {
            "data": [
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              119,
              101,
              98,
              97,
              117,
              116,
              104,
              110,
              46,
              99,
              114,
              101,
              97,
              116,
              101,
              34,
              44,
              34,
              99,
              104,
              97,
              108,
              108,
              101,
              110,
              103,
              101,
              34,
              58,
              34,
              89,
              78,
              48,
              103,
              116,
              67,
              115,
              117,
              104,
              76,
              56,
              72,
              101,
              100,
              119,
              76,
              72,
              66,
              69,
              113,
              109,
              81,
              34,
              44,
              34,
              111,
              114,
              105,
              103,
              105,
              110,
              34,
              58,
              34,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              99,
              114,
              111,
              115,
              115,
              79,
              114,
              105,
              103,
              105,
              110,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125,
            ],
            "type": "Buffer",
          },
        },
        "type": "public-key",
      }
    `);
  });
});
